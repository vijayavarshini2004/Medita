{"ast":null,"code":"import React,{useState}from'react';import'./Medquiz.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Medquiz=()=>{const[startQuiz,setStartQuiz]=useState(false);const[showRules,setShowRules]=useState(false);const[showQuestions,setShowQuestions]=useState(false);const[showResult,setShowResult]=useState(false);const[questionIndex,setQuestionIndex]=useState(0);const[questions]=useState([{numb:1,question:\"Over the past two weeks, how often have you felt down, depressed, or hopeless?\",options:[\"Not at all\",\"Several days\",\"More than half the days\",\"Nearly every day\"]},{numb:2,question:\"Have you experienced a loss of interest or pleasure in activities that you used to enjoy?\",options:[\"Not at all\",\"Several days\",\"More than half the days\",\"Nearly every day\"]},{numb:3,question:\"How would you rate changes in your appetite or weight recently?\",options:[\"Not at all\",\"Several days\",\"More than half the days\",\"Nearly every day\"]},{numb:4,question:\"Have you had trouble sleeping, such as difficulty falling asleep, staying asleep, or sleeping too much??\",options:[\"Not at all\",\"Several days\",\"More than half the days\",\"Nearly every day\"]},{numb:5,question:\"How often have you felt unusually tired or lacking in energy, even after rest?\",options:[\"Not at all\",\"Several days\",\"More than half the days\",\"Nearly every day\"]}// Add more questions here...\n]);const[userScore,setUserScore]=useState(0);const[showNextButton,setShowNextButton]=useState(false);const startQuizHandler=()=>{setStartQuiz(true);};const showRulesHandler=()=>{setShowRules(true);};const continueQuizHandler=()=>{setShowRules(false);setShowQuestions(true);};const optionSelected=index=>{const selectedOption=index;const correctOption=questions[questionIndex].options.indexOf(\"Nearly every day\");if(selectedOption===correctOption){setUserScore(userScore+1);}setShowNextButton(true);// Set showNextButton to true when an option is selected\n};const nextQuestionHandler=()=>{if(questionIndex<questions.length-1){setQuestionIndex(questionIndex+1);setShowNextButton(false);// Hide the next button when moving to the next question\n}else{setShowQuestions(false);setShowResult(true);}};const exitHandler=()=>{window.location.reload();};return/*#__PURE__*/_jsxs(\"div\",{children:[!startQuiz&&/*#__PURE__*/_jsx(\"div\",{className:\"start_btn\",children:/*#__PURE__*/_jsx(\"button\",{onClick:startQuizHandler,children:\"Start Quiz\"})}),startQuiz&&!showRules&&/*#__PURE__*/_jsxs(\"div\",{className:\"info_box activeInfo\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-title\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Some Rules of this Quiz\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-list\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info\",children:\"1.  You will be 5 given question \"}),/*#__PURE__*/_jsx(\"div\",{className:\"info\",children:\"2. Once you select your answer, it can't be undone.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"info\",children:\"3. You can't exit from the Quiz once started.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"info\",children:\"4. After completion You'll get report of this test in your mail\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"quit\",onClick:()=>setStartQuiz(false),children:\"Exit Quiz\"}),/*#__PURE__*/_jsx(\"button\",{className:\"restart\",onClick:continueQuizHandler,children:\"Continue\"})]})]}),showQuestions&&/*#__PURE__*/_jsxs(\"div\",{className:\"quiz_box activeQuiz\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"MedQuiz\"})}),/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"que_text\",children:[questions[questionIndex].numb,\". \",questions[questionIndex].question]}),/*#__PURE__*/_jsx(\"div\",{className:\"option_list\",children:questions[questionIndex].options.map((option,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"option\",onClick:()=>optionSelected(index),children:option},index))})]}),/*#__PURE__*/_jsx(\"footer\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"total_que\",children:[questionIndex+1,\" of \",questions.length,\" Questions\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"next\",children:showNextButton&&/*#__PURE__*/_jsx(\"button\",{className:\"next_btn\",onClick:nextQuestionHandler,children:\"Next\"})})]}),showResult&&/*#__PURE__*/_jsxs(\"div\",{className:\"result_box activeResult\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"complete_text\",children:[\"Your Response has been Submitted\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"The Report will be generated soon!!\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"buttons\",children:/*#__PURE__*/_jsx(\"button\",{className:\"quit\",onClick:exitHandler,children:\"Exit\"})})]})]});};export default Medquiz;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Medquiz","startQuiz","setStartQuiz","showRules","setShowRules","showQuestions","setShowQuestions","showResult","setShowResult","questionIndex","setQuestionIndex","questions","numb","question","options","userScore","setUserScore","showNextButton","setShowNextButton","startQuizHandler","showRulesHandler","continueQuizHandler","optionSelected","index","selectedOption","correctOption","indexOf","nextQuestionHandler","length","exitHandler","window","location","reload","children","className","onClick","map","option"],"sources":["/workspaces/Medita/src/components/Medquiz.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './Medquiz.css';\n\nconst Medquiz = () => {\n    const [startQuiz, setStartQuiz] = useState(false);\n    const [showRules, setShowRules] = useState(false);\n    const [showQuestions, setShowQuestions] = useState(false);\n    const [showResult, setShowResult] = useState(false);\n    const [questionIndex, setQuestionIndex] = useState(0);\n    const [questions] = useState([\n        {\n            numb: 1,\n            question: \"Over the past two weeks, how often have you felt down, depressed, or hopeless?\",\n            options: [\n                \"Not at all\",\n                \"Several days\",\n                \"More than half the days\",\n                \"Nearly every day\"\n            ]\n        },\n        {\n            numb: 2,\n            question: \"Have you experienced a loss of interest or pleasure in activities that you used to enjoy?\",\n            options: [\n                \"Not at all\",\n                \"Several days\",\n                \"More than half the days\",\n                \"Nearly every day\"\n            ]\n        },\n        {\n            numb: 3,\n            question: \"How would you rate changes in your appetite or weight recently?\",\n            options: [\n                \"Not at all\",\n                \"Several days\",\n                \"More than half the days\",\n                \"Nearly every day\"\n            ]\n        },\n        {\n            numb: 4,\n            question: \"Have you had trouble sleeping, such as difficulty falling asleep, staying asleep, or sleeping too much??\",\n            options: [\n                \"Not at all\",\n                \"Several days\",\n                \"More than half the days\",\n                \"Nearly every day\"\n            ]\n        },\n        {\n            numb: 5,\n            question: \"How often have you felt unusually tired or lacking in energy, even after rest?\",\n            options: [\n                \"Not at all\",\n                \"Several days\",\n                \"More than half the days\",\n                \"Nearly every day\"\n            ]\n        },\n        // Add more questions here...\n    ]);\n    const [userScore, setUserScore] = useState(0);\n    const [showNextButton, setShowNextButton] = useState(false);\n\n    const startQuizHandler = () => {\n        setStartQuiz(true);\n    };\n\n    const showRulesHandler = () => {\n        setShowRules(true);\n    };\n\n    const continueQuizHandler = () => {\n        setShowRules(false);\n        setShowQuestions(true);\n    };\n\n    const optionSelected = (index) => {\n        const selectedOption = index;\n        const correctOption = questions[questionIndex].options.indexOf(\"Nearly every day\");\n        if (selectedOption === correctOption) {\n            setUserScore(userScore + 1);\n        }\n        setShowNextButton(true); // Set showNextButton to true when an option is selected\n    };\n    \n    const nextQuestionHandler = () => {\n        if (questionIndex < questions.length - 1) {\n            setQuestionIndex(questionIndex + 1);\n            setShowNextButton(false); // Hide the next button when moving to the next question\n        } else {\n            setShowQuestions(false);\n            setShowResult(true);\n        }\n    };\n\n    const exitHandler = () => {\n        window.location.reload();\n    };\n\n    return (\n        <div>\n            {!startQuiz && (\n                <div className=\"start_btn\">\n                    <button onClick={startQuizHandler}>Start Quiz</button>\n                </div>\n            )}\n\n            {startQuiz && !showRules && (\n                <div className=\"info_box activeInfo\">\n                    <div className=\"info-title\"><span>Some Rules of this Quiz</span></div>\n                    <div className=\"info-list\">\n                        <div className=\"info\">1.  You will be 5 given question </div>\n                        <div className=\"info\">2. Once you select your answer, it can't be undone.</div>\n                        <div className=\"info\">3. You can't exit from the Quiz once started.</div>\n                        <div className=\"info\">4. After completion You'll get report of this test in your mail</div>\n                    </div>\n                    <div className=\"buttons\">\n                        <button className=\"quit\" onClick={() => setStartQuiz(false)}>Exit Quiz</button>\n                        <button className=\"restart\" onClick={continueQuizHandler}>Continue</button>\n                    </div>\n                </div>\n            )}\n            \n            {showQuestions && (\n                <div className=\"quiz_box activeQuiz\">\n                    <header>\n                        <div className=\"title\">MedQuiz</div>\n                    </header>\n                    <section>\n                        <div className=\"que_text\">{questions[questionIndex].numb}. {questions[questionIndex].question}</div>\n                        <div className=\"option_list\">\n                            {questions[questionIndex].options.map((option, index) => (\n                                <div className=\"option\" key={index} onClick={() => optionSelected(index)}>{option}</div>\n                            ))}\n                        </div>\n                    </section>\n                    <footer>\n                        <div className=\"total_que\">{questionIndex + 1} of {questions.length} Questions</div>\n                    </footer>\n                    <div className='next'>\n                    {showNextButton && (\n                        <button className=\"next_btn\" onClick={nextQuestionHandler}>Next</button>\n                    )}\n                    </div>\n                </div>\n            )}\n\n            {showResult && (\n                <div className=\"result_box activeResult\">\n                    <div className=\"complete_text\">Your Response has been Submitted<br/><br/>The Report will be generated soon!!</div>\n                    <div className=\"buttons\">\n                        <button className=\"quit\" onClick={exitHandler}>Exit</button>\n                    </div>\n                </div>\n            )}\n        </div>\n\n    );\n};\n\nexport default Medquiz;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAClB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACQ,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACU,aAAa,CAAEC,gBAAgB,CAAC,CAAGX,QAAQ,CAAC,KAAK,CAAC,CACzD,KAAM,CAACY,UAAU,CAAEC,aAAa,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACc,aAAa,CAAEC,gBAAgB,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CACrD,KAAM,CAACgB,SAAS,CAAC,CAAGhB,QAAQ,CAAC,CACzB,CACIiB,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,gFAAgF,CAC1FC,OAAO,CAAE,CACL,YAAY,CACZ,cAAc,CACd,yBAAyB,CACzB,kBAAkB,CAE1B,CAAC,CACD,CACIF,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,2FAA2F,CACrGC,OAAO,CAAE,CACL,YAAY,CACZ,cAAc,CACd,yBAAyB,CACzB,kBAAkB,CAE1B,CAAC,CACD,CACIF,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,iEAAiE,CAC3EC,OAAO,CAAE,CACL,YAAY,CACZ,cAAc,CACd,yBAAyB,CACzB,kBAAkB,CAE1B,CAAC,CACD,CACIF,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,0GAA0G,CACpHC,OAAO,CAAE,CACL,YAAY,CACZ,cAAc,CACd,yBAAyB,CACzB,kBAAkB,CAE1B,CAAC,CACD,CACIF,IAAI,CAAE,CAAC,CACPC,QAAQ,CAAE,gFAAgF,CAC1FC,OAAO,CAAE,CACL,YAAY,CACZ,cAAc,CACd,yBAAyB,CACzB,kBAAkB,CAE1B,CACA;AAAA,CACH,CAAC,CACF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,CAAC,CAAC,CAC7C,KAAM,CAACsB,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAE3D,KAAM,CAAAwB,gBAAgB,CAAGA,CAAA,GAAM,CAC3BjB,YAAY,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAkB,gBAAgB,CAAGA,CAAA,GAAM,CAC3BhB,YAAY,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAiB,mBAAmB,CAAGA,CAAA,GAAM,CAC9BjB,YAAY,CAAC,KAAK,CAAC,CACnBE,gBAAgB,CAAC,IAAI,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAgB,cAAc,CAAIC,KAAK,EAAK,CAC9B,KAAM,CAAAC,cAAc,CAAGD,KAAK,CAC5B,KAAM,CAAAE,aAAa,CAAGd,SAAS,CAACF,aAAa,CAAC,CAACK,OAAO,CAACY,OAAO,CAAC,kBAAkB,CAAC,CAClF,GAAIF,cAAc,GAAKC,aAAa,CAAE,CAClCT,YAAY,CAACD,SAAS,CAAG,CAAC,CAAC,CAC/B,CACAG,iBAAiB,CAAC,IAAI,CAAC,CAAE;AAC7B,CAAC,CAED,KAAM,CAAAS,mBAAmB,CAAGA,CAAA,GAAM,CAC9B,GAAIlB,aAAa,CAAGE,SAAS,CAACiB,MAAM,CAAG,CAAC,CAAE,CACtClB,gBAAgB,CAACD,aAAa,CAAG,CAAC,CAAC,CACnCS,iBAAiB,CAAC,KAAK,CAAC,CAAE;AAC9B,CAAC,IAAM,CACHZ,gBAAgB,CAAC,KAAK,CAAC,CACvBE,aAAa,CAAC,IAAI,CAAC,CACvB,CACJ,CAAC,CAED,KAAM,CAAAqB,WAAW,CAAGA,CAAA,GAAM,CACtBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAC5B,CAAC,CAED,mBACIjC,KAAA,QAAAkC,QAAA,EACK,CAAChC,SAAS,eACPJ,IAAA,QAAKqC,SAAS,CAAC,WAAW,CAAAD,QAAA,cACtBpC,IAAA,WAAQsC,OAAO,CAAEhB,gBAAiB,CAAAc,QAAA,CAAC,YAAU,CAAQ,CAAC,CACrD,CACR,CAEAhC,SAAS,EAAI,CAACE,SAAS,eACpBJ,KAAA,QAAKmC,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAChCpC,IAAA,QAAKqC,SAAS,CAAC,YAAY,CAAAD,QAAA,cAACpC,IAAA,SAAAoC,QAAA,CAAM,yBAAuB,CAAM,CAAC,CAAK,CAAC,cACtElC,KAAA,QAAKmC,SAAS,CAAC,WAAW,CAAAD,QAAA,eACtBpC,IAAA,QAAKqC,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,mCAAiC,CAAK,CAAC,cAC7DpC,IAAA,QAAKqC,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,qDAAmD,CAAK,CAAC,cAC/EpC,IAAA,QAAKqC,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,+CAA6C,CAAK,CAAC,cACzEpC,IAAA,QAAKqC,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAC,iEAA+D,CAAK,CAAC,EAC1F,CAAC,cACNlC,KAAA,QAAKmC,SAAS,CAAC,SAAS,CAAAD,QAAA,eACpBpC,IAAA,WAAQqC,SAAS,CAAC,MAAM,CAACC,OAAO,CAAEA,CAAA,GAAMjC,YAAY,CAAC,KAAK,CAAE,CAAA+B,QAAA,CAAC,WAAS,CAAQ,CAAC,cAC/EpC,IAAA,WAAQqC,SAAS,CAAC,SAAS,CAACC,OAAO,CAAEd,mBAAoB,CAAAY,QAAA,CAAC,UAAQ,CAAQ,CAAC,EAC1E,CAAC,EACL,CACR,CAEA5B,aAAa,eACVN,KAAA,QAAKmC,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAChCpC,IAAA,WAAAoC,QAAA,cACIpC,IAAA,QAAKqC,SAAS,CAAC,OAAO,CAAAD,QAAA,CAAC,SAAO,CAAK,CAAC,CAChC,CAAC,cACTlC,KAAA,YAAAkC,QAAA,eACIlC,KAAA,QAAKmC,SAAS,CAAC,UAAU,CAAAD,QAAA,EAAEtB,SAAS,CAACF,aAAa,CAAC,CAACG,IAAI,CAAC,IAAE,CAACD,SAAS,CAACF,aAAa,CAAC,CAACI,QAAQ,EAAM,CAAC,cACpGhB,IAAA,QAAKqC,SAAS,CAAC,aAAa,CAAAD,QAAA,CACvBtB,SAAS,CAACF,aAAa,CAAC,CAACK,OAAO,CAACsB,GAAG,CAAC,CAACC,MAAM,CAAEd,KAAK,gBAChD1B,IAAA,QAAKqC,SAAS,CAAC,QAAQ,CAAaC,OAAO,CAAEA,CAAA,GAAMb,cAAc,CAACC,KAAK,CAAE,CAAAU,QAAA,CAAEI,MAAM,EAApDd,KAA0D,CAC1F,CAAC,CACD,CAAC,EACD,CAAC,cACV1B,IAAA,WAAAoC,QAAA,cACIlC,KAAA,QAAKmC,SAAS,CAAC,WAAW,CAAAD,QAAA,EAAExB,aAAa,CAAG,CAAC,CAAC,MAAI,CAACE,SAAS,CAACiB,MAAM,CAAC,YAAU,EAAK,CAAC,CAChF,CAAC,cACT/B,IAAA,QAAKqC,SAAS,CAAC,MAAM,CAAAD,QAAA,CACpBhB,cAAc,eACXpB,IAAA,WAAQqC,SAAS,CAAC,UAAU,CAACC,OAAO,CAAER,mBAAoB,CAAAM,QAAA,CAAC,MAAI,CAAQ,CAC1E,CACI,CAAC,EACL,CACR,CAEA1B,UAAU,eACPR,KAAA,QAAKmC,SAAS,CAAC,yBAAyB,CAAAD,QAAA,eACpClC,KAAA,QAAKmC,SAAS,CAAC,eAAe,CAAAD,QAAA,EAAC,kCAAgC,cAAApC,IAAA,QAAI,CAAC,cAAAA,IAAA,QAAI,CAAC,sCAAmC,EAAK,CAAC,cAClHA,IAAA,QAAKqC,SAAS,CAAC,SAAS,CAAAD,QAAA,cACpBpC,IAAA,WAAQqC,SAAS,CAAC,MAAM,CAACC,OAAO,CAAEN,WAAY,CAAAI,QAAA,CAAC,MAAI,CAAQ,CAAC,CAC3D,CAAC,EACL,CACR,EACA,CAAC,CAGd,CAAC,CAED,cAAe,CAAAjC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}